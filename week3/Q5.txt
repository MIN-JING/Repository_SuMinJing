5. Try to explain the benefits of ConstraintLayout. Why should you use it?

Constraint是一個視圖與其他使用者介面(UI)元素、父級佈局、隱形引導線的連結、結合。

ConstraintLayout是處理少量(小於15個元素)的視圖、視圖組合，甚至到深度嵌入視圖程度的複雜視圖時，是最佳的處理方法。

ConstraintLayout優勢：

1.對螢幕和解析度反應靈敏。

2.可以使視圖層次結構扁平而增進效能。

3.可針對視圖的佈局最佳化。

4.它無特定型式，可將視圖放置在任何地方，編輯器會協助加入位置限制。


所以，為了讓視圖能有更多樣的表現，以及減少視圖層次結構，在初期開發少量視圖元素時，應選用ConstraintLayout。



ConstraintLayout提供多種位置限制方法：
相對位置(Relative positioning)
邊距(Margins)
對中定位(Centering positioning)及偏移(bias)
圓形定位(Circular positioning)
有形行為(Visibility behavior)
維度限制(Dimension constraints)
鏈(Chains)
虛擬輔助物件(Virtual Helpers objects)
最佳化器(Optimizer)





ConstraintLayout利用
layout_width
layout_height

加諸以下限制
Top_toTopOf
Bottom_toBottomOf
Left_toLeftOf
Right_toRightOf
Top_toBottomOf
Bottom_toTopOf
Left_toRightOf
Right_toLeftOf

來互相約束出實際位置及大小。


Lesson 2, ep 19

https://developer.android.com/reference/android/support/constraint/ConstraintLayout

https://ithelp.ithome.com.tw/articles/10219479